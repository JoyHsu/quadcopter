   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"hw_config.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvSetupHardware,"ax",%progbits
  20              		.align	2
  21              		.global	prvSetupHardware
  22              		.thumb
  23              		.thumb_func
  25              	prvSetupHardware:
  26              	.LFB110:
  27              		.file 1 "src/hw_config.c"
   1:src/hw_config.c **** /**
   2:src/hw_config.c ****   ******************************************************************************
   3:src/hw_config.c ****   * @file    STM32F4-Discovery FreeRTOS demo\hw_config.c
   4:src/hw_config.c ****   * @author  T.O.M.A.S. Team
   5:src/hw_config.c ****   * @version V1.0.0
   6:src/hw_config.c ****   * @date    05-October-2011
   7:src/hw_config.c ****   * @brief   Hardware initialization
   8:src/hw_config.c ****   ******************************************************************************
   9:src/hw_config.c ****   * @attention
  10:src/hw_config.c ****   *
  11:src/hw_config.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:src/hw_config.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:src/hw_config.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:src/hw_config.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:src/hw_config.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:src/hw_config.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:src/hw_config.c ****   *
  18:src/hw_config.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:src/hw_config.c ****   ******************************************************************************
  20:src/hw_config.c ****   */
  21:src/hw_config.c **** 
  22:src/hw_config.c **** /* Library includes. */
  23:src/hw_config.c **** #include "hw_config.h"
  24:src/hw_config.c **** 
  25:src/hw_config.c **** 
  26:src/hw_config.c **** /*-----------------------------------------------------------*/
  27:src/hw_config.c **** void prvSetupHardware( void )
  28:src/hw_config.c **** {
  28              		.loc 1 28 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  29:src/hw_config.c **** 	/* Set the Vector Table base address at 0x08000000 */
  30:src/hw_config.c **** 	NVIC_SetVectorTable( NVIC_VectTab_FLASH, 0x0 );
  40              		.loc 1 30 0
  41 0004 4FF00060 		mov	r0, #134217728
  42 0008 4FF00001 		mov	r1, #0
  43 000c FFF7FEFF 		bl	NVIC_SetVectorTable
  31:src/hw_config.c **** 	NVIC_PriorityGroupConfig( NVIC_PriorityGroup_4 );
  44              		.loc 1 31 0
  45 0010 4FF44070 		mov	r0, #768
  46 0014 FFF7FEFF 		bl	NVIC_PriorityGroupConfig
  32:src/hw_config.c **** 
  33:src/hw_config.c **** 	/* Configure LED IOs as output push-pull */
  34:src/hw_config.c ****     /* Initialize LEDs on STM32F4_Discovery board */
  35:src/hw_config.c **** 	//prvLED_Config(GPIO);
  36:src/hw_config.c **** 	/* Configure User button pin (PA0) as external interrupt -> modes switching */
  37:src/hw_config.c **** 	STM_EVAL_PBInit(BUTTON_USER,BUTTON_MODE_EXTI);
  47              		.loc 1 37 0
  48 0018 4FF00000 		mov	r0, #0
  49 001c 4FF00101 		mov	r1, #1
  50 0020 FFF7FEFF 		bl	STM_EVAL_PBInit
  38:src/hw_config.c **** 
  39:src/hw_config.c **** 	/* Configuration of Timer4 to control LEDs based on MEMS data */
  40:src/hw_config.c **** 	//prvTIM4_Config();
  41:src/hw_config.c **** 
  42:src/hw_config.c **** 	/* Configure LIS302 in order to produce data used for TIM4 reconfiguration and LED control */
  43:src/hw_config.c **** 	prvMEMS_Config();
  51              		.loc 1 43 0
  52 0024 FFF7FEFF 		bl	prvMEMS_Config
  44:src/hw_config.c **** 
  45:src/hw_config.c ****   RCC_Configuration();
  53              		.loc 1 45 0
  54 0028 FFF7FEFF 		bl	RCC_Configuration
  46:src/hw_config.c ****   GPIO_Configuration();
  55              		.loc 1 46 0
  56 002c FFF7FEFF 		bl	GPIO_Configuration
  47:src/hw_config.c ****   TIM_Configuration();
  57              		.loc 1 47 0
  58 0030 FFF7FEFF 		bl	TIM_Configuration
  48:src/hw_config.c ****   USART_Configuration();
  59              		.loc 1 48 0
  60 0034 FFF7FEFF 		bl	USART_Configuration
  49:src/hw_config.c **** 
  50:src/hw_config.c **** 
  51:src/hw_config.c **** }
  61              		.loc 1 51 0
  62 0038 80BD     		pop	{r7, pc}
  63              		.cfi_endproc
  64              	.LFE110:
  66              		.section	.text.prvLED_Config,"ax",%progbits
  67              		.align	2
  68              		.global	prvLED_Config
  69              		.thumb
  70              		.thumb_func
  72              	prvLED_Config:
  73              	.LFB111:
  52:src/hw_config.c **** 
  53:src/hw_config.c **** void prvLED_Config(char state)
  54:src/hw_config.c **** {
  74              		.loc 1 54 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 16
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 14, -4
  82              		.cfi_offset 7, -8
  83 0002 84B0     		sub	sp, sp, #16
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 24
  86 0004 00AF     		add	r7, sp, #0
  87              	.LCFI4:
  88              		.cfi_def_cfa_register 7
  89 0006 0346     		mov	r3, r0
  90 0008 FB71     		strb	r3, [r7, #7]
  55:src/hw_config.c ****   GPIO_InitTypeDef  GPIO_InitStructure;
  56:src/hw_config.c ****   /* GPIOD Periph clock enable */
  57:src/hw_config.c ****   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
  91              		.loc 1 57 0
  92 000a 4FF00800 		mov	r0, #8
  93 000e 4FF00101 		mov	r1, #1
  94 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  58:src/hw_config.c ****   /* Configure PD12, PD13, PD14 and PD15 in output push-pull mode */
  59:src/hw_config.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13| GPIO_Pin_14| GPIO_Pin_15;
  95              		.loc 1 59 0
  96 0016 4FF47043 		mov	r3, #61440
  97 001a BB60     		str	r3, [r7, #8]
  60:src/hw_config.c ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  98              		.loc 1 60 0
  99 001c 4FF00003 		mov	r3, #0
 100 0020 BB73     		strb	r3, [r7, #14]
  61:src/hw_config.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 101              		.loc 1 61 0
 102 0022 4FF00303 		mov	r3, #3
 103 0026 7B73     		strb	r3, [r7, #13]
  62:src/hw_config.c ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 104              		.loc 1 62 0
 105 0028 4FF00003 		mov	r3, #0
 106 002c FB73     		strb	r3, [r7, #15]
  63:src/hw_config.c **** 
  64:src/hw_config.c ****   if(state==GPIO)
 107              		.loc 1 64 0
 108 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 109 0030 002B     		cmp	r3, #0
 110 0032 0CD1     		bne	.L3
  65:src/hw_config.c ****   {
  66:src/hw_config.c **** 	  /* standard output pin */
  67:src/hw_config.c **** 	  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 111              		.loc 1 67 0
 112 0034 4FF00103 		mov	r3, #1
 113 0038 3B73     		strb	r3, [r7, #12]
  68:src/hw_config.c **** 	  GPIO_Init(GPIOD, &GPIO_InitStructure);
 114              		.loc 1 68 0
 115 003a 4FF44060 		mov	r0, #3072
 116 003e C4F20200 		movt	r0, 16386
 117 0042 07F10803 		add	r3, r7, #8
 118 0046 1946     		mov	r1, r3
 119 0048 FFF7FEFF 		bl	GPIO_Init
 120 004c 36E0     		b	.L2
 121              	.L3:
  69:src/hw_config.c ****   }
  70:src/hw_config.c ****   else
  71:src/hw_config.c ****   {
  72:src/hw_config.c **** 	  /*-------------------------- GPIO Configuration ----------------------------*/
  73:src/hw_config.c **** 	  /* GPIOD Configuration: Pins 12, 13, 14 and 15 in output push-pull - alternative mode */
  74:src/hw_config.c **** 	  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
 122              		.loc 1 74 0
 123 004e 4FF47043 		mov	r3, #61440
 124 0052 BB60     		str	r3, [r7, #8]
  75:src/hw_config.c **** 	  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 125              		.loc 1 75 0
 126 0054 4FF00203 		mov	r3, #2
 127 0058 3B73     		strb	r3, [r7, #12]
  76:src/hw_config.c **** 	  GPIO_Init(GPIOD, &GPIO_InitStructure);
 128              		.loc 1 76 0
 129 005a 4FF44060 		mov	r0, #3072
 130 005e C4F20200 		movt	r0, 16386
 131 0062 07F10803 		add	r3, r7, #8
 132 0066 1946     		mov	r1, r3
 133 0068 FFF7FEFF 		bl	GPIO_Init
  77:src/hw_config.c **** 
  78:src/hw_config.c **** 	  /* Connect TIM4 pins to AF2 */
  79:src/hw_config.c **** 	  GPIO_PinAFConfig(GPIOD, GPIO_PinSource12, GPIO_AF_TIM4);
 134              		.loc 1 79 0
 135 006c 4FF44060 		mov	r0, #3072
 136 0070 C4F20200 		movt	r0, 16386
 137 0074 4FF00C01 		mov	r1, #12
 138 0078 4FF00202 		mov	r2, #2
 139 007c FFF7FEFF 		bl	GPIO_PinAFConfig
  80:src/hw_config.c **** 	  GPIO_PinAFConfig(GPIOD, GPIO_PinSource13, GPIO_AF_TIM4);
 140              		.loc 1 80 0
 141 0080 4FF44060 		mov	r0, #3072
 142 0084 C4F20200 		movt	r0, 16386
 143 0088 4FF00D01 		mov	r1, #13
 144 008c 4FF00202 		mov	r2, #2
 145 0090 FFF7FEFF 		bl	GPIO_PinAFConfig
  81:src/hw_config.c **** 	  GPIO_PinAFConfig(GPIOD, GPIO_PinSource14, GPIO_AF_TIM4);
 146              		.loc 1 81 0
 147 0094 4FF44060 		mov	r0, #3072
 148 0098 C4F20200 		movt	r0, 16386
 149 009c 4FF00E01 		mov	r1, #14
 150 00a0 4FF00202 		mov	r2, #2
 151 00a4 FFF7FEFF 		bl	GPIO_PinAFConfig
  82:src/hw_config.c **** 	  GPIO_PinAFConfig(GPIOD, GPIO_PinSource15, GPIO_AF_TIM4);
 152              		.loc 1 82 0
 153 00a8 4FF44060 		mov	r0, #3072
 154 00ac C4F20200 		movt	r0, 16386
 155 00b0 4FF00F01 		mov	r1, #15
 156 00b4 4FF00202 		mov	r2, #2
 157 00b8 FFF7FEFF 		bl	GPIO_PinAFConfig
 158              	.L2:
  83:src/hw_config.c ****   }
  84:src/hw_config.c **** }
 159              		.loc 1 84 0
 160 00bc 07F11007 		add	r7, r7, #16
 161 00c0 BD46     		mov	sp, r7
 162 00c2 80BD     		pop	{r7, pc}
 163              		.cfi_endproc
 164              	.LFE111:
 166              		.section	.text.RCC_Configuration,"ax",%progbits
 167              		.align	2
 168              		.global	RCC_Configuration
 169              		.thumb
 170              		.thumb_func
 172              	RCC_Configuration:
 173              	.LFB112:
  85:src/hw_config.c **** 
  86:src/hw_config.c **** 
  87:src/hw_config.c **** /**
  88:src/hw_config.c ****   * @brief  Configures the different system clocks.
  89:src/hw_config.c ****   * @param  None
  90:src/hw_config.c ****   * @retval None
  91:src/hw_config.c ****   */
  92:src/hw_config.c **** void RCC_Configuration(void)
  93:src/hw_config.c **** {
 174              		.loc 1 93 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              	.LCFI5:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 14, -4
 182              		.cfi_offset 7, -8
 183 0002 00AF     		add	r7, sp, #0
 184              	.LCFI6:
 185              		.cfi_def_cfa_register 7
  94:src/hw_config.c ****   
  95:src/hw_config.c ****   RCC_AHB1PeriphClockCmd(  RCC_AHB1Periph_GPIOD , ENABLE );
 186              		.loc 1 95 0
 187 0004 4FF00800 		mov	r0, #8
 188 0008 4FF00101 		mov	r1, #1
 189 000c FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  96:src/hw_config.c ****   RCC_APB1PeriphClockCmd( RCC_APB1Periph_TIM4, ENABLE );
 190              		.loc 1 96 0
 191 0010 4FF00400 		mov	r0, #4
 192 0014 4FF00101 		mov	r1, #1
 193 0018 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  97:src/hw_config.c **** 
  98:src/hw_config.c ****   //Enable GPIO Clocks For USART2
  99:src/hw_config.c ****   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 194              		.loc 1 99 0
 195 001c 4FF00100 		mov	r0, #1
 196 0020 4FF00101 		mov	r1, #1
 197 0024 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 100:src/hw_config.c **** 
 101:src/hw_config.c ****   //Enable Clocks for USART2
 102:src/hw_config.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);    
 198              		.loc 1 102 0
 199 0028 4FF40030 		mov	r0, #131072
 200 002c 4FF00101 		mov	r1, #1
 201 0030 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 103:src/hw_config.c **** }
 202              		.loc 1 103 0
 203 0034 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE112:
 207 0036 00BF     		.section	.text.GPIO_Configuration,"ax",%progbits
 208              		.align	2
 209              		.global	GPIO_Configuration
 210              		.thumb
 211              		.thumb_func
 213              	GPIO_Configuration:
 214              	.LFB113:
 104:src/hw_config.c **** 
 105:src/hw_config.c **** /**
 106:src/hw_config.c ****   * @brief  configure the PD12~15 to Timers
 107:src/hw_config.c ****   * @param  None
 108:src/hw_config.c ****   * @retval None
 109:src/hw_config.c ****   */
 110:src/hw_config.c **** void GPIO_Configuration(void)
 111:src/hw_config.c **** {
 215              		.loc 1 111 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 8
 218              		@ frame_needed = 1, uses_anonymous_args = 0
 219 0000 80B5     		push	{r7, lr}
 220              	.LCFI7:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 14, -4
 223              		.cfi_offset 7, -8
 224 0002 82B0     		sub	sp, sp, #8
 225              	.LCFI8:
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              	.LCFI9:
 229              		.cfi_def_cfa_register 7
 112:src/hw_config.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 113:src/hw_config.c ****   //GPIO Configuration for TIM4
 114:src/hw_config.c ****      GPIO_StructInit(&GPIO_InitStructure); // Reset init structure
 230              		.loc 1 114 0
 231 0006 3B46     		mov	r3, r7
 232 0008 1846     		mov	r0, r3
 233 000a FFF7FEFF 		bl	GPIO_StructInit
 115:src/hw_config.c ****  
 116:src/hw_config.c ****      GPIO_PinAFConfig(GPIOD, GPIO_PinSource12, GPIO_AF_TIM4);
 234              		.loc 1 116 0
 235 000e 4FF44060 		mov	r0, #3072
 236 0012 C4F20200 		movt	r0, 16386
 237 0016 4FF00C01 		mov	r1, #12
 238 001a 4FF00202 		mov	r2, #2
 239 001e FFF7FEFF 		bl	GPIO_PinAFConfig
 117:src/hw_config.c ****      GPIO_PinAFConfig(GPIOD, GPIO_PinSource13, GPIO_AF_TIM4);
 240              		.loc 1 117 0
 241 0022 4FF44060 		mov	r0, #3072
 242 0026 C4F20200 		movt	r0, 16386
 243 002a 4FF00D01 		mov	r1, #13
 244 002e 4FF00202 		mov	r2, #2
 245 0032 FFF7FEFF 		bl	GPIO_PinAFConfig
 118:src/hw_config.c ****      GPIO_PinAFConfig(GPIOD, GPIO_PinSource14, GPIO_AF_TIM4);
 246              		.loc 1 118 0
 247 0036 4FF44060 		mov	r0, #3072
 248 003a C4F20200 		movt	r0, 16386
 249 003e 4FF00E01 		mov	r1, #14
 250 0042 4FF00202 		mov	r2, #2
 251 0046 FFF7FEFF 		bl	GPIO_PinAFConfig
 119:src/hw_config.c ****      GPIO_PinAFConfig(GPIOD, GPIO_PinSource15, GPIO_AF_TIM4);
 252              		.loc 1 119 0
 253 004a 4FF44060 		mov	r0, #3072
 254 004e C4F20200 		movt	r0, 16386
 255 0052 4FF00F01 		mov	r1, #15
 256 0056 4FF00202 		mov	r2, #2
 257 005a FFF7FEFF 		bl	GPIO_PinAFConfig
 120:src/hw_config.c ****       
 121:src/hw_config.c **** 
 122:src/hw_config.c ****   //   // Setup Blue & Green LED on STM32-Discovery Board to use PWM.
 123:src/hw_config.c ****      GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_12 | GPIO_Pin_13| GPIO_Pin_14| GPIO_Pin_15; 
 258              		.loc 1 123 0
 259 005e 4FF47043 		mov	r3, #61440
 260 0062 3B60     		str	r3, [r7, #0]
 124:src/hw_config.c ****   // //PD12->LED3 PD13->LED4 PD14->LED5 PD15->LED6
 125:src/hw_config.c ****      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;            // Alt Function - Push Pull
 261              		.loc 1 125 0
 262 0064 4FF00203 		mov	r3, #2
 263 0068 3B71     		strb	r3, [r7, #4]
 126:src/hw_config.c ****   	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF; 
 264              		.loc 1 126 0
 265 006a 4FF00203 		mov	r3, #2
 266 006e 3B71     		strb	r3, [r7, #4]
 127:src/hw_config.c ****      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 267              		.loc 1 127 0
 268 0070 4FF00003 		mov	r3, #0
 269 0074 BB71     		strb	r3, [r7, #6]
 128:src/hw_config.c ****      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 270              		.loc 1 128 0
 271 0076 4FF00303 		mov	r3, #3
 272 007a 7B71     		strb	r3, [r7, #5]
 129:src/hw_config.c ****      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 273              		.loc 1 129 0
 274 007c 4FF00003 		mov	r3, #0
 275 0080 FB71     		strb	r3, [r7, #7]
 130:src/hw_config.c ****      GPIO_Init( GPIOD, &GPIO_InitStructure );  
 276              		.loc 1 130 0
 277 0082 4FF44060 		mov	r0, #3072
 278 0086 C4F20200 		movt	r0, 16386
 279 008a 3B46     		mov	r3, r7
 280 008c 1946     		mov	r1, r3
 281 008e FFF7FEFF 		bl	GPIO_Init
 131:src/hw_config.c **** 
 132:src/hw_config.c ****     /*----------------------------------------------------------------------*/
 133:src/hw_config.c **** 
 134:src/hw_config.c ****   //GPIO Configuration for USART - PA2, PA3
 135:src/hw_config.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2 | GPIO_Pin_3;
 282              		.loc 1 135 0
 283 0092 4FF00C03 		mov	r3, #12
 284 0096 3B60     		str	r3, [r7, #0]
 136:src/hw_config.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 285              		.loc 1 136 0
 286 0098 4FF00203 		mov	r3, #2
 287 009c 3B71     		strb	r3, [r7, #4]
 137:src/hw_config.c ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 288              		.loc 1 137 0
 289 009e 4FF00003 		mov	r3, #0
 290 00a2 BB71     		strb	r3, [r7, #6]
 138:src/hw_config.c ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 291              		.loc 1 138 0
 292 00a4 4FF00003 		mov	r3, #0
 293 00a8 FB71     		strb	r3, [r7, #7]
 139:src/hw_config.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 294              		.loc 1 139 0
 295 00aa 4FF00203 		mov	r3, #2
 296 00ae 7B71     		strb	r3, [r7, #5]
 140:src/hw_config.c ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
 297              		.loc 1 140 0
 298 00b0 4FF00000 		mov	r0, #0
 299 00b4 C4F20200 		movt	r0, 16386
 300 00b8 3B46     		mov	r3, r7
 301 00ba 1946     		mov	r1, r3
 302 00bc FFF7FEFF 		bl	GPIO_Init
 141:src/hw_config.c **** 
 142:src/hw_config.c ****   //Connect USART pins to AF
 143:src/hw_config.c ****   GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_USART2);
 303              		.loc 1 143 0
 304 00c0 4FF00000 		mov	r0, #0
 305 00c4 C4F20200 		movt	r0, 16386
 306 00c8 4FF00201 		mov	r1, #2
 307 00cc 4FF00702 		mov	r2, #7
 308 00d0 FFF7FEFF 		bl	GPIO_PinAFConfig
 144:src/hw_config.c ****   GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_USART2);
 309              		.loc 1 144 0
 310 00d4 4FF00000 		mov	r0, #0
 311 00d8 C4F20200 		movt	r0, 16386
 312 00dc 4FF00301 		mov	r1, #3
 313 00e0 4FF00702 		mov	r2, #7
 314 00e4 FFF7FEFF 		bl	GPIO_PinAFConfig
 145:src/hw_config.c **** 
 146:src/hw_config.c **** }
 315              		.loc 1 146 0
 316 00e8 07F10807 		add	r7, r7, #8
 317 00ec BD46     		mov	sp, r7
 318 00ee 80BD     		pop	{r7, pc}
 319              		.cfi_endproc
 320              	.LFE113:
 322              		.section	.text.TIM_Configuration,"ax",%progbits
 323              		.align	2
 324              		.global	TIM_Configuration
 325              		.thumb
 326              		.thumb_func
 328              	TIM_Configuration:
 329              	.LFB114:
 147:src/hw_config.c **** 
 148:src/hw_config.c **** /**
 149:src/hw_config.c ****   * @brief  configure the TIM4 for PWM mode
 150:src/hw_config.c ****   * @param  None
 151:src/hw_config.c ****   * @retval None
 152:src/hw_config.c ****   */
 153:src/hw_config.c **** void TIM_Configuration(void)
 154:src/hw_config.c **** {
 330              		.loc 1 154 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 32
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334 0000 80B5     		push	{r7, lr}
 335              	.LCFI10:
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 14, -4
 338              		.cfi_offset 7, -8
 339 0002 88B0     		sub	sp, sp, #32
 340              	.LCFI11:
 341              		.cfi_def_cfa_offset 40
 342 0004 00AF     		add	r7, sp, #0
 343              	.LCFI12:
 344              		.cfi_def_cfa_register 7
 155:src/hw_config.c ****     TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;
 156:src/hw_config.c ****     TIM_OCInitTypeDef TIM_OCInitStruct;
 157:src/hw_config.c **** 
 158:src/hw_config.c ****     // Let PWM frequency equal 100Hz.
 159:src/hw_config.c ****     // Let period equal 1000. Therefore, timer runs from zero to 1000. Gives 0.1Hz resolution.
 160:src/hw_config.c ****     // Solving for prescaler gives 240.
 161:src/hw_config.c ****     TIM_TimeBaseStructInit( &TIM_TimeBaseInitStruct );
 345              		.loc 1 161 0
 346 0006 07F11403 		add	r3, r7, #20
 347 000a 1846     		mov	r0, r3
 348 000c FFF7FEFF 		bl	TIM_TimeBaseStructInit
 162:src/hw_config.c ****     TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV4;
 349              		.loc 1 162 0
 350 0010 4FF40073 		mov	r3, #512
 351 0014 BB83     		strh	r3, [r7, #28]	@ movhi
 163:src/hw_config.c ****     TIM_TimeBaseInitStruct.TIM_Period = 3360 - 1;   
 352              		.loc 1 163 0
 353 0016 40F61F53 		movw	r3, #3359
 354 001a BB61     		str	r3, [r7, #24]
 164:src/hw_config.c ****     TIM_TimeBaseInitStruct.TIM_Prescaler = 500 - 1; 
 355              		.loc 1 164 0
 356 001c 40F2F313 		movw	r3, #499
 357 0020 BB82     		strh	r3, [r7, #20]	@ movhi
 165:src/hw_config.c ****     TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;    
 358              		.loc 1 165 0
 359 0022 4FF00003 		mov	r3, #0
 360 0026 FB82     		strh	r3, [r7, #22]	@ movhi
 166:src/hw_config.c ****     TIM_TimeBaseInit( TIM4, &TIM_TimeBaseInitStruct );
 361              		.loc 1 166 0
 362 0028 4FF40060 		mov	r0, #2048
 363 002c C4F20000 		movt	r0, 16384
 364 0030 07F11403 		add	r3, r7, #20
 365 0034 1946     		mov	r1, r3
 366 0036 FFF7FEFF 		bl	TIM_TimeBaseInit
 167:src/hw_config.c ****     
 168:src/hw_config.c ****     TIM_OCStructInit( &TIM_OCInitStruct );
 367              		.loc 1 168 0
 368 003a 3B46     		mov	r3, r7
 369 003c 1846     		mov	r0, r3
 370 003e FFF7FEFF 		bl	TIM_OCStructInit
 169:src/hw_config.c ****     TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;
 371              		.loc 1 169 0
 372 0042 4FF00103 		mov	r3, #1
 373 0046 7B80     		strh	r3, [r7, #2]	@ movhi
 170:src/hw_config.c ****     TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM1;
 374              		.loc 1 170 0
 375 0048 4FF06003 		mov	r3, #96
 376 004c 3B80     		strh	r3, [r7, #0]	@ movhi
 171:src/hw_config.c ****     
 172:src/hw_config.c ****     // Initial duty cycle equals 0%. Value can range from zero to 65535.
 173:src/hw_config.c ****     //TIM_Pulse = TIM4_CCR1 register (16 bits)
 174:src/hw_config.c ****     TIM_OCInitStruct.TIM_Pulse = 0; //(0=Always Off, 65535=Always On)
 377              		.loc 1 174 0
 378 004e 4FF00003 		mov	r3, #0
 379 0052 BB60     		str	r3, [r7, #8]
 175:src/hw_config.c ****  
 176:src/hw_config.c ****     TIM_OC1Init( TIM4, &TIM_OCInitStruct ); // Channel 1  LED
 380              		.loc 1 176 0
 381 0054 4FF40060 		mov	r0, #2048
 382 0058 C4F20000 		movt	r0, 16384
 383 005c 3B46     		mov	r3, r7
 384 005e 1946     		mov	r1, r3
 385 0060 FFF7FEFF 		bl	TIM_OC1Init
 177:src/hw_config.c ****     TIM_OC2Init( TIM4, &TIM_OCInitStruct ); // Channel 2  LED
 386              		.loc 1 177 0
 387 0064 4FF40060 		mov	r0, #2048
 388 0068 C4F20000 		movt	r0, 16384
 389 006c 3B46     		mov	r3, r7
 390 006e 1946     		mov	r1, r3
 391 0070 FFF7FEFF 		bl	TIM_OC2Init
 178:src/hw_config.c ****     TIM_OC3Init( TIM4, &TIM_OCInitStruct ); // Channel 3  LED
 392              		.loc 1 178 0
 393 0074 4FF40060 		mov	r0, #2048
 394 0078 C4F20000 		movt	r0, 16384
 395 007c 3B46     		mov	r3, r7
 396 007e 1946     		mov	r1, r3
 397 0080 FFF7FEFF 		bl	TIM_OC3Init
 179:src/hw_config.c ****     TIM_OC4Init( TIM4, &TIM_OCInitStruct ); // Channel 4  LED
 398              		.loc 1 179 0
 399 0084 4FF40060 		mov	r0, #2048
 400 0088 C4F20000 		movt	r0, 16384
 401 008c 3B46     		mov	r3, r7
 402 008e 1946     		mov	r1, r3
 403 0090 FFF7FEFF 		bl	TIM_OC4Init
 180:src/hw_config.c ****  
 181:src/hw_config.c ****     TIM_Cmd( TIM4, ENABLE );
 404              		.loc 1 181 0
 405 0094 4FF40060 		mov	r0, #2048
 406 0098 C4F20000 		movt	r0, 16384
 407 009c 4FF00101 		mov	r1, #1
 408 00a0 FFF7FEFF 		bl	TIM_Cmd
 182:src/hw_config.c **** }
 409              		.loc 1 182 0
 410 00a4 07F12007 		add	r7, r7, #32
 411 00a8 BD46     		mov	sp, r7
 412 00aa 80BD     		pop	{r7, pc}
 413              		.cfi_endproc
 414              	.LFE114:
 416              		.section	.text.USART_Configuration,"ax",%progbits
 417              		.align	2
 418              		.global	USART_Configuration
 419              		.thumb
 420              		.thumb_func
 422              	USART_Configuration:
 423              	.LFB115:
 183:src/hw_config.c **** 
 184:src/hw_config.c **** /**
 185:src/hw_config.c ****   * @brief  configure the USART
 186:src/hw_config.c ****   * @param  None
 187:src/hw_config.c ****   * @retval None
 188:src/hw_config.c ****   */
 189:src/hw_config.c **** void USART_Configuration(void)
 190:src/hw_config.c **** {
 424              		.loc 1 190 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 16
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0000 80B5     		push	{r7, lr}
 429              	.LCFI13:
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 14, -4
 432              		.cfi_offset 7, -8
 433 0002 84B0     		sub	sp, sp, #16
 434              	.LCFI14:
 435              		.cfi_def_cfa_offset 24
 436 0004 00AF     		add	r7, sp, #0
 437              	.LCFI15:
 438              		.cfi_def_cfa_register 7
 191:src/hw_config.c ****   //Structure With Data For USART Configuration
 192:src/hw_config.c ****   USART_InitTypeDef USART_InitStructure;
 193:src/hw_config.c ****   
 194:src/hw_config.c ****   //USART Parameters
 195:src/hw_config.c ****   USART_InitStructure.USART_BaudRate = 19200;
 439              		.loc 1 195 0
 440 0006 4FF49643 		mov	r3, #19200
 441 000a 3B60     		str	r3, [r7, #0]
 196:src/hw_config.c ****   USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 442              		.loc 1 196 0
 443 000c 4FF00003 		mov	r3, #0
 444 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 197:src/hw_config.c ****   USART_InitStructure.USART_StopBits = USART_StopBits_1;
 445              		.loc 1 197 0
 446 0012 4FF00003 		mov	r3, #0
 447 0016 FB80     		strh	r3, [r7, #6]	@ movhi
 198:src/hw_config.c ****   USART_InitStructure.USART_Parity = USART_Parity_No ;
 448              		.loc 1 198 0
 449 0018 4FF00003 		mov	r3, #0
 450 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 199:src/hw_config.c ****   USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
 451              		.loc 1 199 0
 452 001e 4FF00003 		mov	r3, #0
 453 0022 BB81     		strh	r3, [r7, #12]	@ movhi
 200:src/hw_config.c ****   USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx ;
 454              		.loc 1 200 0
 455 0024 4FF00C03 		mov	r3, #12
 456 0028 7B81     		strh	r3, [r7, #10]	@ movhi
 201:src/hw_config.c **** 
 202:src/hw_config.c ****   //Configuring And Enabling USART2
 203:src/hw_config.c ****   USART_Init(USART2, &USART_InitStructure);
 457              		.loc 1 203 0
 458 002a 4FF48840 		mov	r0, #17408
 459 002e C4F20000 		movt	r0, 16384
 460 0032 3B46     		mov	r3, r7
 461 0034 1946     		mov	r1, r3
 462 0036 FFF7FEFF 		bl	USART_Init
 204:src/hw_config.c ****   USART_Cmd(USART2, ENABLE);
 463              		.loc 1 204 0
 464 003a 4FF48840 		mov	r0, #17408
 465 003e C4F20000 		movt	r0, 16384
 466 0042 4FF00101 		mov	r1, #1
 467 0046 FFF7FEFF 		bl	USART_Cmd
 205:src/hw_config.c **** 
 206:src/hw_config.c **** 
 207:src/hw_config.c **** }
 468              		.loc 1 207 0
 469 004a 07F11007 		add	r7, r7, #16
 470 004e BD46     		mov	sp, r7
 471 0050 80BD     		pop	{r7, pc}
 472              		.cfi_endproc
 473              	.LFE115:
 475 0052 00BF     		.section	.text.prvMEMS_Config,"ax",%progbits
 476              		.align	2
 477              		.global	prvMEMS_Config
 478              		.thumb
 479              		.thumb_func
 481              	prvMEMS_Config:
 482              	.LFB116:
 208:src/hw_config.c **** 
 209:src/hw_config.c **** /*------------below is original code------------*/
 210:src/hw_config.c **** 
 211:src/hw_config.c **** void prvMEMS_Config(void)
 212:src/hw_config.c **** {
 483              		.loc 1 212 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 32
 486              		@ frame_needed = 1, uses_anonymous_args = 0
 487 0000 80B5     		push	{r7, lr}
 488              	.LCFI16:
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 14, -4
 491              		.cfi_offset 7, -8
 492 0002 88B0     		sub	sp, sp, #32
 493              	.LCFI17:
 494              		.cfi_def_cfa_offset 40
 495 0004 00AF     		add	r7, sp, #0
 496              	.LCFI18:
 497              		.cfi_def_cfa_register 7
 213:src/hw_config.c **** 	uint8_t ctrl = 0;
 498              		.loc 1 213 0
 499 0006 4FF00003 		mov	r3, #0
 500 000a FB77     		strb	r3, [r7, #31]
 214:src/hw_config.c **** 
 215:src/hw_config.c **** 	LIS3DSH_InitTypeDef  LIS3DSH_InitStruct;
 216:src/hw_config.c **** 
 217:src/hw_config.c ****     LIS3DSH_InitStruct.SM1_Hysteresis=0x00;
 501              		.loc 1 217 0
 502 000c 4FF00003 		mov	r3, #0
 503 0010 3B70     		strb	r3, [r7, #0]
 218:src/hw_config.c ****     LIS3DSH_InitStruct.SM1_Pin=LIS3DSH_SM1_INT_TO_PIN_INT1;
 504              		.loc 1 218 0
 505 0012 4FF00003 		mov	r3, #0
 506 0016 7B70     		strb	r3, [r7, #1]
 219:src/hw_config.c ****     LIS3DSH_InitStruct.SM1_Enable=LIS3DSH_SM1_DISABLE;
 507              		.loc 1 219 0
 508 0018 4FF00003 		mov	r3, #0
 509 001c BB70     		strb	r3, [r7, #2]
 220:src/hw_config.c **** 
 221:src/hw_config.c ****     LIS3DSH_InitStruct.SM2_Hysteresis=0x00;
 510              		.loc 1 221 0
 511 001e 4FF00003 		mov	r3, #0
 512 0022 FB70     		strb	r3, [r7, #3]
 222:src/hw_config.c ****     LIS3DSH_InitStruct.SM2_Pin=LIS3DSH_SM2_INT_TO_PIN_INT1;
 513              		.loc 1 222 0
 514 0024 4FF00003 		mov	r3, #0
 515 0028 3B71     		strb	r3, [r7, #4]
 223:src/hw_config.c ****     LIS3DSH_InitStruct.SM2_Enable=LIS3DSH_SM2_DISABLE;
 516              		.loc 1 223 0
 517 002a 4FF00003 		mov	r3, #0
 518 002e 7B71     		strb	r3, [r7, #5]
 224:src/hw_config.c **** 
 225:src/hw_config.c ****     LIS3DSH_InitStruct.CR3_Dren=LIS3DSH_CR3_DREN_TO_INT1_DISABLE;
 519              		.loc 1 225 0
 520 0030 4FF00003 		mov	r3, #0
 521 0034 BB71     		strb	r3, [r7, #6]
 226:src/hw_config.c ****     LIS3DSH_InitStruct.CR3_Iea=LIS3DSH_CR3_IEA_ACTIVE_LOW;
 522              		.loc 1 226 0
 523 0036 4FF00003 		mov	r3, #0
 524 003a FB71     		strb	r3, [r7, #7]
 227:src/hw_config.c ****     LIS3DSH_InitStruct.CR3_Iel=LIS3DSH_CR3_IEL_LATCHED;
 525              		.loc 1 227 0
 526 003c 4FF00003 		mov	r3, #0
 527 0040 3B72     		strb	r3, [r7, #8]
 228:src/hw_config.c ****     LIS3DSH_InitStruct.CR3_Int2En=LIS3DSH_CR3_INT2_DISABLED;
 528              		.loc 1 228 0
 529 0042 4FF00003 		mov	r3, #0
 530 0046 7B72     		strb	r3, [r7, #9]
 229:src/hw_config.c ****     LIS3DSH_InitStruct.CR3_Int1En=LIS3DSH_CR3_INT1_DISABLED;
 531              		.loc 1 229 0
 532 0048 4FF00003 		mov	r3, #0
 533 004c BB72     		strb	r3, [r7, #10]
 230:src/hw_config.c ****     LIS3DSH_InitStruct.CR3_Vfilt=LIS3DSH_CR3_VFILT_DISABLED;
 534              		.loc 1 230 0
 535 004e 4FF00003 		mov	r3, #0
 536 0052 FB72     		strb	r3, [r7, #11]
 231:src/hw_config.c ****     LIS3DSH_InitStruct.CR3_Strt=LIS3DSH_CR3_NO_SOFT_RESET;
 537              		.loc 1 231 0
 538 0054 4FF00003 		mov	r3, #0
 539 0058 3B73     		strb	r3, [r7, #12]
 232:src/hw_config.c **** 
 233:src/hw_config.c ****     LIS3DSH_InitStruct.CR4_Odr=LIS3DSH_CR4_ODR_100HZ;
 540              		.loc 1 233 0
 541 005a 4FF00603 		mov	r3, #6
 542 005e 7B73     		strb	r3, [r7, #13]
 234:src/hw_config.c ****     LIS3DSH_InitStruct.CR4_Bdu=LIS3DSH_CR4_BDU_ENABLED;
 543              		.loc 1 234 0
 544 0060 4FF00103 		mov	r3, #1
 545 0064 BB73     		strb	r3, [r7, #14]
 235:src/hw_config.c ****     LIS3DSH_InitStruct.CR4_Zen=LIS3DSH_CR4_Z_AXIS_ENABLED;
 546              		.loc 1 235 0
 547 0066 4FF00103 		mov	r3, #1
 548 006a FB73     		strb	r3, [r7, #15]
 236:src/hw_config.c ****     LIS3DSH_InitStruct.CR4_Yen=LIS3DSH_CR4_Y_AXIS_ENABLED;
 549              		.loc 1 236 0
 550 006c 4FF00103 		mov	r3, #1
 551 0070 3B74     		strb	r3, [r7, #16]
 237:src/hw_config.c ****     LIS3DSH_InitStruct.CR4_Xen=LIS3DSH_CR4_X_AXIS_ENABLED;
 552              		.loc 1 237 0
 553 0072 4FF00103 		mov	r3, #1
 554 0076 7B74     		strb	r3, [r7, #17]
 238:src/hw_config.c **** 
 239:src/hw_config.c ****     LIS3DSH_InitStruct.CR5_Bw=LIS3DSH_CR5_BW_50HZ;
 555              		.loc 1 239 0
 556 0078 4FF00303 		mov	r3, #3
 557 007c BB74     		strb	r3, [r7, #18]
 240:src/hw_config.c ****     LIS3DSH_InitStruct.CR5_Fscale=LIS3DSH_CR5_FSCALE_2G;
 558              		.loc 1 240 0
 559 007e 4FF00003 		mov	r3, #0
 560 0082 FB74     		strb	r3, [r7, #19]
 241:src/hw_config.c ****     LIS3DSH_InitStruct.CR5_St=LIS3DSH_CR5_ST_DISABLE;
 561              		.loc 1 241 0
 562 0084 4FF00003 		mov	r3, #0
 563 0088 3B75     		strb	r3, [r7, #20]
 242:src/hw_config.c ****     LIS3DSH_InitStruct.CR5_Sim=LIS3DSH_CR5_MODE_4_WIRE_INTERFACE;
 564              		.loc 1 242 0
 565 008a 4FF00003 		mov	r3, #0
 566 008e 7B75     		strb	r3, [r7, #21]
 243:src/hw_config.c **** 
 244:src/hw_config.c ****     LIS3DSH_InitStruct.CR6_Boot=LIS3DSH_CR6_FORCE_REBOOT_DISABLE;
 567              		.loc 1 244 0
 568 0090 4FF00003 		mov	r3, #0
 569 0094 BB75     		strb	r3, [r7, #22]
 245:src/hw_config.c ****     LIS3DSH_InitStruct.CR6_FifoEn=LIS3DSH_CR6_FIFO_DISABLED;
 570              		.loc 1 245 0
 571 0096 4FF00003 		mov	r3, #0
 572 009a FB75     		strb	r3, [r7, #23]
 246:src/hw_config.c ****     LIS3DSH_InitStruct.CR6_WtmEn=LIS3DSH_CR6_WTM_DISABLED;
 573              		.loc 1 246 0
 574 009c 4FF00003 		mov	r3, #0
 575 00a0 3B76     		strb	r3, [r7, #24]
 247:src/hw_config.c ****     LIS3DSH_InitStruct.CR6_AddInc=LIS3DSH_CR6_ADDINC_DISABLED;
 576              		.loc 1 247 0
 577 00a2 4FF00003 		mov	r3, #0
 578 00a6 7B76     		strb	r3, [r7, #25]
 248:src/hw_config.c ****     LIS3DSH_InitStruct.CR6_P1Empty=LIS3DSH_CR6_FIFO_EMPTY_TO_INT1_DISABLED;
 579              		.loc 1 248 0
 580 00a8 4FF00003 		mov	r3, #0
 581 00ac BB76     		strb	r3, [r7, #26]
 249:src/hw_config.c ****     LIS3DSH_InitStruct.CR6_P1Wtm=LIS3DSH_CR6_FIFO_WTM_TO_INT1_DISABLED;
 582              		.loc 1 249 0
 583 00ae 4FF00003 		mov	r3, #0
 584 00b2 FB76     		strb	r3, [r7, #27]
 250:src/hw_config.c ****     LIS3DSH_InitStruct.CR6_P1OverRun=LIS3DSH_CR6_FIFO_OVERRUN_TO_INT1_DISABLED;
 585              		.loc 1 250 0
 586 00b4 4FF00003 		mov	r3, #0
 587 00b8 3B77     		strb	r3, [r7, #28]
 251:src/hw_config.c ****     LIS3DSH_InitStruct.CR6_P2Boot=LIS3DSH_CR6_BOOT_TO_INT2_DISABLED;
 588              		.loc 1 251 0
 589 00ba 4FF00003 		mov	r3, #0
 590 00be 7B77     		strb	r3, [r7, #29]
 252:src/hw_config.c **** 
 253:src/hw_config.c **** 	
 254:src/hw_config.c **** 	LIS3DSH_Init(&LIS3DSH_InitStruct);	
 591              		.loc 1 254 0
 592 00c0 3B46     		mov	r3, r7
 593 00c2 1846     		mov	r0, r3
 594 00c4 FFF7FEFF 		bl	LIS3DSH_Init
 255:src/hw_config.c **** }
 595              		.loc 1 255 0
 596 00c8 07F12007 		add	r7, r7, #32
 597 00cc BD46     		mov	sp, r7
 598 00ce 80BD     		pop	{r7, pc}
 599              		.cfi_endproc
 600              	.LFE116:
 602              		.section	.text.LIS3DSH_TIMEOUT_UserCallback,"ax",%progbits
 603              		.align	2
 604              		.global	LIS3DSH_TIMEOUT_UserCallback
 605              		.thumb
 606              		.thumb_func
 608              	LIS3DSH_TIMEOUT_UserCallback:
 609              	.LFB117:
 256:src/hw_config.c **** 
 257:src/hw_config.c **** /**
 258:src/hw_config.c ****   * @brief  MEMS accelerometer management of the timeout situation.
 259:src/hw_config.c ****   * @param  None.
 260:src/hw_config.c ****   * @retval None.
 261:src/hw_config.c ****   */
 262:src/hw_config.c **** uint32_t LIS3DSH_TIMEOUT_UserCallback(void)
 263:src/hw_config.c **** {
 610              		.loc 1 263 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615 0000 80B4     		push	{r7}
 616              	.LCFI19:
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 7, -4
 619 0002 00AF     		add	r7, sp, #0
 620              	.LCFI20:
 621              		.cfi_def_cfa_register 7
 622              	.L11:
 264:src/hw_config.c ****   /* MEMS Accelerometer Timeout error has occured */
 265:src/hw_config.c ****   while (1)
 266:src/hw_config.c ****   {
 267:src/hw_config.c ****   }
 623              		.loc 1 267 0 discriminator 1
 624 0004 FEE7     		b	.L11
 625              		.cfi_endproc
 626              	.LFE117:
 628 0006 00BF     		.section	.text.prvTIM4_Config,"ax",%progbits
 629              		.align	2
 630              		.global	prvTIM4_Config
 631              		.thumb
 632              		.thumb_func
 634              	prvTIM4_Config:
 635              	.LFB118:
 268:src/hw_config.c **** }
 269:src/hw_config.c **** 
 270:src/hw_config.c **** void prvTIM4_Config(void)
 271:src/hw_config.c **** {
 636              		.loc 1 271 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 40
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              	.LCFI21:
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 14, -4
 644              		.cfi_offset 7, -8
 645 0002 8AB0     		sub	sp, sp, #40
 646              	.LCFI22:
 647              		.cfi_def_cfa_offset 48
 648 0004 00AF     		add	r7, sp, #0
 649              	.LCFI23:
 650              		.cfi_def_cfa_register 7
 272:src/hw_config.c ****   uint16_t PrescalerValue = 0;
 651              		.loc 1 272 0
 652 0006 4FF00003 		mov	r3, #0
 653 000a FB84     		strh	r3, [r7, #38]	@ movhi
 273:src/hw_config.c ****   TIM_OCInitTypeDef  TIM_OCInitStructure;
 274:src/hw_config.c ****   TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
 275:src/hw_config.c **** 
 276:src/hw_config.c ****   /* --------------------------- System Clocks Configuration -----------------*/
 277:src/hw_config.c ****   /* TIM4 clock enable */
 278:src/hw_config.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
 654              		.loc 1 278 0
 655 000c 4FF00400 		mov	r0, #4
 656 0010 4FF00101 		mov	r1, #1
 657 0014 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 279:src/hw_config.c **** 
 280:src/hw_config.c ****     /* -----------------------------------------------------------------------
 281:src/hw_config.c ****     TIM4 Configuration: Output Compare Timing Mode:
 282:src/hw_config.c **** 
 283:src/hw_config.c ****     In this example TIM4 input clock (TIM4CLK) is set to 2 * APB1 clock (PCLK1),
 284:src/hw_config.c ****     since APB1 prescaler is different from 1 (APB1 Prescaler = 4, see system_stm32f4xx.c file).
 285:src/hw_config.c ****       TIM4CLK = 2 * PCLK1
 286:src/hw_config.c ****       PCLK1 = HCLK / 4
 287:src/hw_config.c ****       => TIM4CLK = 2*(HCLK / 4) = HCLK/2 = SystemCoreClock/2
 288:src/hw_config.c **** 
 289:src/hw_config.c ****     To get TIM4 counter clock at 2 KHz, the prescaler is computed as follows:
 290:src/hw_config.c ****        Prescaler = (TIM4CLK / TIM1 counter clock) - 1
 291:src/hw_config.c ****        Prescaler = (168 MHz/(2 * 2 KHz)) - 1 = 41999
 292:src/hw_config.c **** 
 293:src/hw_config.c ****     To get TIM4 output clock at 1 Hz, the period (ARR)) is computed as follows:
 294:src/hw_config.c ****        ARR = (TIM4 counter clock / TIM4 output clock) - 1
 295:src/hw_config.c ****            = 1999
 296:src/hw_config.c **** 
 297:src/hw_config.c ****     TIM4 Channel1 duty cycle = (TIM4_CCR1/ TIM4_ARR)* 100 = 50%
 298:src/hw_config.c ****     TIM4 Channel2 duty cycle = (TIM4_CCR2/ TIM4_ARR)* 100 = 50%
 299:src/hw_config.c ****     TIM4 Channel3 duty cycle = (TIM4_CCR3/ TIM4_ARR)* 100 = 50%
 300:src/hw_config.c ****     TIM4 Channel4 duty cycle = (TIM4_CCR4/ TIM4_ARR)* 100 = 50%
 301:src/hw_config.c **** 
 302:src/hw_config.c ****     ==> TIM4_CCRx = TIM4_ARR/2 = 1000  (where x = 1, 2, 3 and 4).
 303:src/hw_config.c **** 
 304:src/hw_config.c ****     Note:
 305:src/hw_config.c ****      SystemCoreClock variable holds HCLK frequency and is defined in system_stm32f4xx.c file.
 306:src/hw_config.c ****      Each time the core clock (HCLK) changes, user had to call SystemCoreClockUpdate()
 307:src/hw_config.c ****      function to update SystemCoreClock variable value. Otherwise, any configuration
 308:src/hw_config.c ****      based on this variable will be incorrect.
 309:src/hw_config.c ****   ----------------------------------------------------------------------- */
 310:src/hw_config.c **** 
 311:src/hw_config.c ****   /* Compute the prescaler value */
 312:src/hw_config.c ****   PrescalerValue = (uint16_t) ((SystemCoreClock /2) / 2000) - 1;
 658              		.loc 1 312 0
 659 0018 40F20003 		movw	r3, #:lower16:SystemCoreClock
 660 001c C0F20003 		movt	r3, #:upper16:SystemCoreClock
 661 0020 1A68     		ldr	r2, [r3, #0]
 662 0022 44F6D353 		movw	r3, #19923
 663 0026 C1F26203 		movt	r3, 4194
 664 002a A3FB0213 		umull	r1, r3, r3, r2
 665 002e 4FEA1323 		lsr	r3, r3, #8
 666 0032 9BB2     		uxth	r3, r3
 667 0034 03F1FF33 		add	r3, r3, #-1
 668 0038 FB84     		strh	r3, [r7, #38]	@ movhi
 313:src/hw_config.c **** 
 314:src/hw_config.c ****   /* Time base configuration */
 315:src/hw_config.c ****   TIM_TimeBaseStructure.TIM_Period = TIM_ARR;
 669              		.loc 1 315 0
 670 003a 40F26C73 		movw	r3, #1900
 671 003e BB60     		str	r3, [r7, #8]
 316:src/hw_config.c ****   TIM_TimeBaseStructure.TIM_Prescaler = PrescalerValue;
 672              		.loc 1 316 0
 673 0040 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 674 0042 BB80     		strh	r3, [r7, #4]	@ movhi
 317:src/hw_config.c ****   TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 675              		.loc 1 317 0
 676 0044 4FF00003 		mov	r3, #0
 677 0048 BB81     		strh	r3, [r7, #12]	@ movhi
 318:src/hw_config.c ****   TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 678              		.loc 1 318 0
 679 004a 4FF00003 		mov	r3, #0
 680 004e FB80     		strh	r3, [r7, #6]	@ movhi
 319:src/hw_config.c ****   TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
 681              		.loc 1 319 0
 682 0050 4FF40060 		mov	r0, #2048
 683 0054 C4F20000 		movt	r0, 16384
 684 0058 07F10403 		add	r3, r7, #4
 685 005c 1946     		mov	r1, r3
 686 005e FFF7FEFF 		bl	TIM_TimeBaseInit
 320:src/hw_config.c **** 
 321:src/hw_config.c ****   /* Enable TIM4 Preload register on ARR */
 322:src/hw_config.c ****   TIM_ARRPreloadConfig(TIM4, ENABLE);
 687              		.loc 1 322 0
 688 0062 4FF40060 		mov	r0, #2048
 689 0066 C4F20000 		movt	r0, 16384
 690 006a 4FF00101 		mov	r1, #1
 691 006e FFF7FEFF 		bl	TIM_ARRPreloadConfig
 323:src/hw_config.c **** 
 324:src/hw_config.c ****   /* TIM PWM1 Mode configuration: Channel */
 325:src/hw_config.c ****   TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
 692              		.loc 1 325 0
 693 0072 4FF06003 		mov	r3, #96
 694 0076 3B82     		strh	r3, [r7, #16]	@ movhi
 326:src/hw_config.c ****   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 695              		.loc 1 326 0
 696 0078 4FF00103 		mov	r3, #1
 697 007c 7B82     		strh	r3, [r7, #18]	@ movhi
 327:src/hw_config.c ****   TIM_OCInitStructure.TIM_Pulse = TIM_CCR;
 698              		.loc 1 327 0
 699 007e 4FF47A73 		mov	r3, #1000
 700 0082 BB61     		str	r3, [r7, #24]
 328:src/hw_config.c ****   TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
 701              		.loc 1 328 0
 702 0084 4FF00003 		mov	r3, #0
 703 0088 BB83     		strh	r3, [r7, #28]	@ movhi
 329:src/hw_config.c **** 
 330:src/hw_config.c ****   /* Output Compare PWM1 Mode configuration: Channel1 */
 331:src/hw_config.c ****   TIM_OC1Init(TIM4, &TIM_OCInitStructure);
 704              		.loc 1 331 0
 705 008a 4FF40060 		mov	r0, #2048
 706 008e C4F20000 		movt	r0, 16384
 707 0092 07F11003 		add	r3, r7, #16
 708 0096 1946     		mov	r1, r3
 709 0098 FFF7FEFF 		bl	TIM_OC1Init
 332:src/hw_config.c ****   TIM_CCxCmd(TIM4, TIM_Channel_1, DISABLE);
 710              		.loc 1 332 0
 711 009c 4FF40060 		mov	r0, #2048
 712 00a0 C4F20000 		movt	r0, 16384
 713 00a4 4FF00001 		mov	r1, #0
 714 00a8 4FF00002 		mov	r2, #0
 715 00ac FFF7FEFF 		bl	TIM_CCxCmd
 333:src/hw_config.c **** 
 334:src/hw_config.c ****   TIM_OC1PreloadConfig(TIM4, TIM_OCPreload_Enable);
 716              		.loc 1 334 0
 717 00b0 4FF40060 		mov	r0, #2048
 718 00b4 C4F20000 		movt	r0, 16384
 719 00b8 4FF00801 		mov	r1, #8
 720 00bc FFF7FEFF 		bl	TIM_OC1PreloadConfig
 335:src/hw_config.c **** 
 336:src/hw_config.c ****   /* Output Compare PWM1 Mode configuration: Channel2 */
 337:src/hw_config.c ****   TIM_OC2Init(TIM4, &TIM_OCInitStructure);
 721              		.loc 1 337 0
 722 00c0 4FF40060 		mov	r0, #2048
 723 00c4 C4F20000 		movt	r0, 16384
 724 00c8 07F11003 		add	r3, r7, #16
 725 00cc 1946     		mov	r1, r3
 726 00ce FFF7FEFF 		bl	TIM_OC2Init
 338:src/hw_config.c ****   TIM_CCxCmd(TIM4, TIM_Channel_2, DISABLE);
 727              		.loc 1 338 0
 728 00d2 4FF40060 		mov	r0, #2048
 729 00d6 C4F20000 		movt	r0, 16384
 730 00da 4FF00401 		mov	r1, #4
 731 00de 4FF00002 		mov	r2, #0
 732 00e2 FFF7FEFF 		bl	TIM_CCxCmd
 339:src/hw_config.c **** 
 340:src/hw_config.c ****   TIM_OC2PreloadConfig(TIM4, TIM_OCPreload_Enable);
 733              		.loc 1 340 0
 734 00e6 4FF40060 		mov	r0, #2048
 735 00ea C4F20000 		movt	r0, 16384
 736 00ee 4FF00801 		mov	r1, #8
 737 00f2 FFF7FEFF 		bl	TIM_OC2PreloadConfig
 341:src/hw_config.c **** 
 342:src/hw_config.c ****   /* Output Compare PWM1 Mode configuration: Channel3 */
 343:src/hw_config.c ****   TIM_OC3Init(TIM4, &TIM_OCInitStructure);
 738              		.loc 1 343 0
 739 00f6 4FF40060 		mov	r0, #2048
 740 00fa C4F20000 		movt	r0, 16384
 741 00fe 07F11003 		add	r3, r7, #16
 742 0102 1946     		mov	r1, r3
 743 0104 FFF7FEFF 		bl	TIM_OC3Init
 344:src/hw_config.c ****   TIM_CCxCmd(TIM4, TIM_Channel_3, DISABLE);
 744              		.loc 1 344 0
 745 0108 4FF40060 		mov	r0, #2048
 746 010c C4F20000 		movt	r0, 16384
 747 0110 4FF00801 		mov	r1, #8
 748 0114 4FF00002 		mov	r2, #0
 749 0118 FFF7FEFF 		bl	TIM_CCxCmd
 345:src/hw_config.c **** 
 346:src/hw_config.c ****   TIM_OC3PreloadConfig(TIM4, TIM_OCPreload_Enable);
 750              		.loc 1 346 0
 751 011c 4FF40060 		mov	r0, #2048
 752 0120 C4F20000 		movt	r0, 16384
 753 0124 4FF00801 		mov	r1, #8
 754 0128 FFF7FEFF 		bl	TIM_OC3PreloadConfig
 347:src/hw_config.c **** 
 348:src/hw_config.c ****   /* Output Compare PWM1 Mode configuration: Channel4 */
 349:src/hw_config.c ****   TIM_OC4Init(TIM4, &TIM_OCInitStructure);
 755              		.loc 1 349 0
 756 012c 4FF40060 		mov	r0, #2048
 757 0130 C4F20000 		movt	r0, 16384
 758 0134 07F11003 		add	r3, r7, #16
 759 0138 1946     		mov	r1, r3
 760 013a FFF7FEFF 		bl	TIM_OC4Init
 350:src/hw_config.c ****   TIM_CCxCmd(TIM4, TIM_Channel_4, DISABLE);
 761              		.loc 1 350 0
 762 013e 4FF40060 		mov	r0, #2048
 763 0142 C4F20000 		movt	r0, 16384
 764 0146 4FF00C01 		mov	r1, #12
 765 014a 4FF00002 		mov	r2, #0
 766 014e FFF7FEFF 		bl	TIM_CCxCmd
 351:src/hw_config.c **** 
 352:src/hw_config.c ****   TIM_OC4PreloadConfig(TIM4, TIM_OCPreload_Enable);
 767              		.loc 1 352 0
 768 0152 4FF40060 		mov	r0, #2048
 769 0156 C4F20000 		movt	r0, 16384
 770 015a 4FF00801 		mov	r1, #8
 771 015e FFF7FEFF 		bl	TIM_OC4PreloadConfig
 353:src/hw_config.c **** }
 772              		.loc 1 353 0
 773 0162 07F12807 		add	r7, r7, #40
 774 0166 BD46     		mov	sp, r7
 775 0168 80BD     		pop	{r7, pc}
 776              		.cfi_endproc
 777              	.LFE118:
 779 016a 00BF     		.text
 780              	.Letext0:
 781              		.file 2 "/usr/local/csl/arm-2012.03/bin/../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/i
 782              		.file 3 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 783              		.file 4 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 784              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
 785              		.file 6 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
 786              		.file 7 "src/include/stm32f4_discovery.h"
 787              		.file 8 "src/include/stm32f4_discovery_lis3dsh.h"
 788              		.file 9 "libs/CMSIS/Include/core_cm4.h"
 789              		.file 10 "libs/Device/STM32F4xx/Include/system_stm32f4xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hw_config.c
     /tmp/ccTB5BZH.s:20     .text.prvSetupHardware:00000000 $t
     /tmp/ccTB5BZH.s:25     .text.prvSetupHardware:00000000 prvSetupHardware
     /tmp/ccTB5BZH.s:481    .text.prvMEMS_Config:00000000 prvMEMS_Config
     /tmp/ccTB5BZH.s:172    .text.RCC_Configuration:00000000 RCC_Configuration
     /tmp/ccTB5BZH.s:213    .text.GPIO_Configuration:00000000 GPIO_Configuration
     /tmp/ccTB5BZH.s:328    .text.TIM_Configuration:00000000 TIM_Configuration
     /tmp/ccTB5BZH.s:422    .text.USART_Configuration:00000000 USART_Configuration
     /tmp/ccTB5BZH.s:67     .text.prvLED_Config:00000000 $t
     /tmp/ccTB5BZH.s:72     .text.prvLED_Config:00000000 prvLED_Config
     /tmp/ccTB5BZH.s:167    .text.RCC_Configuration:00000000 $t
     /tmp/ccTB5BZH.s:208    .text.GPIO_Configuration:00000000 $t
     /tmp/ccTB5BZH.s:323    .text.TIM_Configuration:00000000 $t
     /tmp/ccTB5BZH.s:417    .text.USART_Configuration:00000000 $t
     /tmp/ccTB5BZH.s:476    .text.prvMEMS_Config:00000000 $t
     /tmp/ccTB5BZH.s:603    .text.LIS3DSH_TIMEOUT_UserCallback:00000000 $t
     /tmp/ccTB5BZH.s:608    .text.LIS3DSH_TIMEOUT_UserCallback:00000000 LIS3DSH_TIMEOUT_UserCallback
     /tmp/ccTB5BZH.s:629    .text.prvTIM4_Config:00000000 $t
     /tmp/ccTB5BZH.s:634    .text.prvTIM4_Config:00000000 prvTIM4_Config
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
NVIC_SetVectorTable
NVIC_PriorityGroupConfig
STM_EVAL_PBInit
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
RCC_APB1PeriphClockCmd
GPIO_StructInit
TIM_TimeBaseStructInit
TIM_TimeBaseInit
TIM_OCStructInit
TIM_OC1Init
TIM_OC2Init
TIM_OC3Init
TIM_OC4Init
TIM_Cmd
USART_Init
USART_Cmd
LIS3DSH_Init
SystemCoreClock
TIM_ARRPreloadConfig
TIM_CCxCmd
TIM_OC1PreloadConfig
TIM_OC2PreloadConfig
TIM_OC3PreloadConfig
TIM_OC4PreloadConfig
